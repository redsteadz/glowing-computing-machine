<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary_search on</title><link>https://redsteadz.github.io/glowing-computing-machine/tags/binary_search/</link><description>Recent content in binary_search on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://redsteadz.github.io/glowing-computing-machine/tags/binary_search/index.xml" rel="self" type="application/rss+xml"/><item><title>3. Longest Substring Without Repeating Characters</title><link>https://redsteadz.github.io/glowing-computing-machine/notes/2.CodeQ/Medium/3.-Longest-Substring-Without-Repeating-Characters/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><guid>https://redsteadz.github.io/glowing-computing-machine/notes/2.CodeQ/Medium/3.-Longest-Substring-Without-Repeating-Characters/</guid><description>Given a string s, find the length of the longest substring without repeating characters.
Example 1: Input: s = &amp;ldquo;abcabcbb&amp;rdquo; Output: 3 Explanation: The answer is &amp;ldquo;abc&amp;rdquo;, with the length of 3.</description></item><item><title>Minimize the Maximum Difference of pairs</title><link>https://redsteadz.github.io/glowing-computing-machine/notes/2.CodeQ/Medium/2616.-Minimize-the-Maximum-Difference-of-pairs/</link><pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate><guid>https://redsteadz.github.io/glowing-computing-machine/notes/2.CodeQ/Medium/2616.-Minimize-the-Maximum-Difference-of-pairs/</guid><description>[!question] You are given a 0 indexed integer array nums and an integer p. Find p pairs of indices of nums such that the maximum difference amongst all the pairs is minimized.</description></item><item><title>Binary Search</title><link>https://redsteadz.github.io/glowing-computing-machine/notes/1.General/Algorithms/binary_search/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>https://redsteadz.github.io/glowing-computing-machine/notes/1.General/Algorithms/binary_search/</guid><description>Description This search basically searches through the array by starting from the middle, checking if the value is &amp;gt; or &amp;lt; than middle.</description></item></channel></rss>