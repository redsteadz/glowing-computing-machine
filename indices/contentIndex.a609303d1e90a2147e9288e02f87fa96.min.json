{"/":{"title":"ü™¥ Quartz 3.","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (ÊµãËØï) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\u003e üìö Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n- üöß [Troubleshooting and FAQ](notes/troubleshooting.md)\n- üêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- üëÄ [Discord Community](https://discord.gg/cRFFHYye7t)\n\n","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230107":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230108":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230109":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230110":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230111":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Day-Planners/Day-Planner-20230113":{"title":"","content":"## Day Planner\n- [ ] ","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Excalidraw/Scripts/Downloaded/Alternative-Pens":{"title":"","content":"/* \nIF YOU ACCIDENTLY MODIFY THIS FILE AND IT STOPS WORKING, SIMPLY DOWNLOAD IT AGAIN FROM THE SCRIPT LIBRARY.\n\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-alternative-pens.jpg)\n\n# How to create a new pen template\nIt takes a bit of experimentation and skill to create a new pen, so be patient.\n\n1. Create a folder in your Vault for your pen options. The default is `Excalidraw/Pens`.\n2. Create a new markdown file in your in the `pen folder` (e.g. `My pen`).\n3. Copy the following template to the markdown file.\n```json\n{\n  \"constantPressure\": false,\n  \"hasOutline\": true,\n  \"outlineWidth\": 4,\n  \"options\": PASTE_PREFECT_FREEHAND_OPTIONS_HERE \n}\n```\n4. If you don't want your pen to have an outline around your line, change `hasOutline` to `false`. You can also modify `outlineWidth` if you want a thinner or thicker outline around your line.\n5. If you want your pen to be pressure sensitive (when drawing with a mouse the pressure is simulated based on the speed of your hand) leave `constantPressure` as `false`. If you want a constant line width regardless of speed and pen pressure, change it to `true`.\n6. Go to https://perfect-freehand-example.vercel.app/ and configure your pen. \n7. Click `Copy Options`.\n8. Go back to the pen file you created in step No.2 and replace the placeholder text with the options you just copied from perfect-freehand.\n9. Look for `easing` in the file and replace the function e.g. `(t) =\u003e t*t,` with the name of the function in brackets (in this example it would be `easeInQuad`). You will find the function name on the perfect-freehand website, only change the first letter to be lower case. \n10. Test your pen in Excalidraw by clicking the `Alternative Pens` script and selecting your new pen.\n\n# Example pens\nMy pens: https://github.com/zsviczian/obsidian-excalidraw-plugin/tree/master/ea-scripts/pens\n\n**Fine tipped pen:**\n```json\n{\n  constantPressure: true,\n  options: {\n    smoothing: 0.4,\n    thinning: -0.5,\n    streamline: 0.4,\n    easing: \"linear\",\n    start: {\n      taper: 5,\n      cap: false,\n    },\n    end: {\n      taper: 5,\n      cap: false,\n    },\n  }\n}\n```\n\n**Thick marker:**\n```json\n{\n  constantPressure: true,\n  hasOutline: true,\n  outlineWidth: 4,\n  options: {\n    thinning: 1,\n    smoothing: 0.5,\n    streamline: 0.5,\n    easing: \"linear\",\n    start: {\n      taper: 0,\n      cap: true\n    },\n    end: {\n      taper: 0,\n      cap: true\n    }\n  }\n}\n```\n\n**Fountain pen:**\n```json\n{\n  options: {\n    smoothing: 0.22,\n    thinning: 0.8,\n    streamline: 0.22,\n    easing: \"easeInQuad\",\n    start: {\n      taper: true,\n      cap: true,\n    },\n    end: {\n      taper: 1,\n      cap: true,\n    },\n  }\n}\n```\n# Notes about the pen options\n\nNote, that custom pens are currently not supported by Excalidraw.com. I've submitted a [PR](https://github.com/excalidraw/excalidraw/pull/6069) but there is no guarantee that it will get pushed to production. Your Excalidraw drawing can still be loaded to Excalidraw, but the special pen effects will not be visible there.\n\nIf you set a pen in your Excalidraw template file, that pen will be loaded automatically when you create a file using that template. Similarly, when you save a document, it will save your current pen settings as well. The next time you open the document, you can continue to use the same pen.\n\nPen options are saved with the stroke. This means, that even if you change the ped definition later on, your existing drawings will not be effected.\n\n`outlineWidth` is relative to `strokeWidth`. i.e. if you make the stroke thinner in Excalidraw, the outline will become proportionally thinner as well. `outlineWidth` is only used if `hasOutline` is set to true.\n\nIf you don't want your pen to be pressure/speed sensitive, set `constantPressure` to `true`. Setting `constantPressure` to `true` automatically sets `simulatePressure` to `false`.\n\nIf you want your pen to be speed sensitive (i.e. the faster you draw the line the thinner it gets), set `options.simulatePressure` to `true`.  If you omit `simulatePressure` from `options` then excalidraw will detect if you are drawing with a mouse or a pen and use pen pressures if available.\n\nYou can read more about configuring perfect freehand here: https://github.com/steveruizok/perfect-freehand#documentation\n\nExcalidraw supports all of the easing functions listed here: https://easings.net/#, plus \"linear\". You can also find details about these easing functions here:\nhttps://github.com/ai/easings.net/blob/master/src/easings/easingsFunctions.ts\n\nFrom a performance perspective I recommend linear easing.\n\n# The script\n\n```javascript */\n\n//--------------------------\n// Load settings\n//--------------------------\nif(!ea.verifyMinimumPluginVersion || !ea.verifyMinimumPluginVersion(\"1.8.8\")) {\n  new Notice(\"This script requires a newer version of Excalidraw. Please install the latest version.\");\n  return;\n}\n\nconst api = ea.getExcalidrawAPI();\nlet settings = ea.getScriptSettings();\n//set default values on first run\nif(!settings[\"Pen folder\"]) {\n  settings = {\n    \"Pen folder\" : {\n      value: \"Excalidraw/Pens\",\n      description: \"The path to the folder where you store the perfect freehand options\"\n    }\n  };\n  ea.setScriptSettings(settings);\n}\n\nlet penFolder = settings[\"Pen folder\"].value.toLowerCase();\nif(penFolder === \"\" || penFolder === \"/\") {\n  new Notice(\"The pen folder cannot be the root folder of your vault\");\n  return;\n}\n\nif(!penFolder.endsWith(\"/\")) penFolder += \"/\";\n\n\n//--------------------------\n// Select pen\n//--------------------------\nconst pens = app.vault.getFiles()\n  .filter(f=\u003ef.extension === \"md\" \u0026\u0026 f.path.toLowerCase() === penFolder + f.name.toLowerCase())\n  .sort((a,b)=\u003ea.basename.toLowerCase()\u003cb.basename.toLowerCase()?-1:1);\nif(pens.length === 0) {\n  const notice = new Notice(`You don't seem to have any pen definition files. Click this message to open the how-to guide.`,4000);\n  notice.noticeEl.onclick = async () =\u003e app.workspace.openLinkText(utils.scriptFile.path,\"\",\"tab\");\n  return;\n}\nconst file = await utils.suggester([\"Excalidraw Default\"].concat(pens.map(f=\u003e(f.name.slice(0,f.name.length-3)))),[\"Default\"].concat(pens), \"Choose a pen preset, press ESC to abort\");\nif(!file) return;\n\nif(file === \"Default\") {\n  api.updateScene({\n    appState: {\n\t    currentStrokeOptions: undefined\n    }\n  });\n  return;\n}\n\n//--------------------------\n// Load pen\n//--------------------------\nconst pen = await app.vault.read(file);\n\nconst parseJSON = (data) =\u003e {\n  try {\n    return JSON.parse(data);\n  } catch(e) {\n\ttry {\n\treturn JSON.parse(data.replaceAll(/\\s(\\w*)\\:\\s/g,' \"$1\": ').replaceAll(/,([^\\w]*?})/gm,\"$1\"));\n\t} catch(ee) {\n\t  const notice = new Notice(`Error loading the pen file. Maybe you accidently copy/pasted the easing function from perfect freehand website? Check the error message in Developer Console.\\n(click=dismiss, right-click=Info) `,5000);\n\t  notice.noticeEl.oncontextmenu = async () =\u003e app.workspace.openLinkText(utils.scriptFile.path,\"\",\"tab\");\n\t  console.error(ee);\n\t  console.error(data.replaceAll(/\\s(\\w*)\\:\\s/g,' \"$1\": ').replaceAll(/,([^\\w]*?})/gm,\"$1\"));\n\t  return;\n\t}\n  }\n}\n\npenJSON = parseJSON(pen);\n\n\nif(!penJSON || typeof penJSON !== 'object') return;\n\n//--------------------------\n// Apply pen\n//--------------------------\nawait api.updateScene({\n  appState: {\n    currentStrokeOptions: penJSON\n    }\n  });\napi.setActiveTool({type:\"freedraw\"});\n","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Excalidraw/Scripts/Downloaded/Auto-Layout":{"title":"","content":"/*\n\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-download-raw.jpg)\n\nDownload this file and save to your Obsidian Vault including the first line, or open it in \"Raw\" and copy the entire contents to Obsidian.\n\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-auto-layout.png)\n\nThis script performs automatic layout for the selected top-level grouping objects. It is powered by [elkjs](https://github.com/kieler/elkjs) and needs to be connected to the Internet.\n\n\nSee documentation for more details:\nhttps://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html\n\n```javascript\n*/\n\nif (\n  !ea.verifyMinimumPluginVersion ||\n  !ea.verifyMinimumPluginVersion(\"1.5.21\")\n) {\n  new Notice(\n    \"This script requires a newer version of Excalidraw. Please install the latest version.\"\n  );\n  return;\n}\n\nsettings = ea.getScriptSettings();\n//set default values on first run\nif (!settings[\"Layout Options JSON\"]) {\n  settings = {\n    \"Layout Options JSON\": {\n      height: \"450px\",\n      value: `{\\n      \"org.eclipse.elk.layered.crossingMinimization.semiInteractive\": \"true\",\\n      \"org.eclipse.elk.layered.considerModelOrder.components\": \"FORCE_MODEL_ORDER\"\\n}`,\n      description: `You can use layout options to configure the layout algorithm. A list of all options and further details of their exact effects is available in \u003ca href=\"http://www.eclipse.org/elk/reference.html\" rel=\"nofollow\"\u003eELK's documentation\u003c/a\u003e.`,\n    },\n  };\n  ea.setScriptSettings(settings);\n} \n\nif (typeof ELK === \"undefined\") {\n  loadELK(doAutoLayout);\n} else {\n  doAutoLayout();\n}\n\nasync function doAutoLayout() {\n  const selectedElements = ea.getViewSelectedElements();\n  const groups = ea\n    .getMaximumGroups(selectedElements)\n    .map((g) =\u003e g.filter((el) =\u003e el.containerId == null)) // ignore text in stickynote\n    .filter((els) =\u003e els.length \u003e 0);\n\n  const stickynotesMap = selectedElements\n    .filter((el) =\u003e el.containerId != null)\n    .reduce((result, el) =\u003e {\n      result.set(el.containerId, el);\n      return result;\n    }, new Map());\n\n  const elk = new ELK();\n  const knownLayoutAlgorithms = await elk.knownLayoutAlgorithms();\n  const layoutAlgorithms = knownLayoutAlgorithms\n    .map((knownLayoutAlgorithm) =\u003e ({\n      id: knownLayoutAlgorithm.id,\n      displayText:\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.layered\" ||\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.radial\" ||\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.mrtree\"\n          ? \"* \" +\n            knownLayoutAlgorithm.name +\n            \": \" +\n            knownLayoutAlgorithm.description\n          : knownLayoutAlgorithm.name + \": \" + knownLayoutAlgorithm.description,\n    }))\n    .sort((lha, rha) =\u003e lha.displayText.localeCompare(rha.displayText));\n\n  const layoutAlgorithmsSimple = knownLayoutAlgorithms\n    .map((knownLayoutAlgorithm) =\u003e ({\n      id: knownLayoutAlgorithm.id,\n      displayText:\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.layered\" ||\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.radial\" ||\n        knownLayoutAlgorithm.id === \"org.eclipse.elk.mrtree\"\n          ? \"* \" + knownLayoutAlgorithm.name\n          : knownLayoutAlgorithm.name,\n    }))\n    .sort((lha, rha) =\u003e lha.displayText.localeCompare(rha.displayText));\n\n  // const knownOptions = knownLayoutAlgorithms\n  //   .reduce(\n  //     (result, knownLayoutAlgorithm) =\u003e [\n  //       ...result,\n  //       ...knownLayoutAlgorithm.knownOptions,\n  //     ],\n  //     []\n  //   )\n  //   .filter((value, index, self) =\u003e self.indexOf(value) === index) // remove duplicates\n  //   .sort((lha, rha) =\u003e lha.localeCompare(rha));\n  // console.log(\"knownOptions\", knownOptions);\n\n  const selectedAlgorithm = await utils.suggester(\n    layoutAlgorithms.map((algorithmInfo) =\u003e algorithmInfo.displayText),\n    layoutAlgorithms.map((algorithmInfo) =\u003e algorithmInfo.id),\n    \"Layout algorithm\"\n  );\n\n  const knownNodePlacementStrategy = [\n    \"SIMPLE\",\n    \"INTERACTIVE\",\n    \"LINEAR_SEGMENTS\",\n    \"BRANDES_KOEPF\",\n    \"NETWORK_SIMPLEX\",\n  ];\n\n  const knownDirections = [\n    \"UNDEFINED\",\n    \"RIGHT\",\n    \"LEFT\",\n    \"DOWN\",\n    \"UP\"\n  ];\n\n  let nodePlacementStrategy = \"BRANDES_KOEPF\";\n  let componentComponentSpacing = \"10\";\n  let nodeNodeSpacing = \"100\";\n  let nodeNodeBetweenLayersSpacing = \"100\";\n  let discoComponentLayoutAlgorithm = \"org.eclipse.elk.layered\";\n  let direction = \"UNDEFINED\";\n\n  if (selectedAlgorithm === \"org.eclipse.elk.layered\") {\n    nodePlacementStrategy = await utils.suggester(\n      knownNodePlacementStrategy,\n      knownNodePlacementStrategy,\n      \"Node placement strategy\"\n    );\n\n    selectedDirection = await utils.suggester(\n      knownDirections,\n      knownDirections,\n      \"Direction\"\n    );\n    direction = selectedDirection??\"UNDEFINED\";\n  } else if (selectedAlgorithm === \"org.eclipse.elk.disco\") {\n    const componentLayoutAlgorithms = layoutAlgorithmsSimple.filter(al =\u003e al.id !== \"org.eclipse.elk.disco\");\n    const selectedDiscoComponentLayoutAlgorithm = await utils.suggester(\n      componentLayoutAlgorithms.map((algorithmInfo) =\u003e algorithmInfo.displayText),\n      componentLayoutAlgorithms.map((algorithmInfo) =\u003e algorithmInfo.id),\n      \"Disco Connected Components Layout Algorithm\"\n    );\n    discoComponentLayoutAlgorithm = selectedDiscoComponentLayoutAlgorithm??\"org.eclipse.elk.layered\";\n  }\n\n  if (\n    selectedAlgorithm === \"org.eclipse.elk.box\" ||\n    selectedAlgorithm === \"org.eclipse.elk.rectpacking\"\n  ) {\n    nodeNodeSpacing = await utils.inputPrompt(\"Node Spacing\", \"number\", \"10\");\n  } else {\n    let userSpacingStr = await utils.inputPrompt(\n      \"Components Spacing, Node Spacing, Node Node Between Layers Spacing\",\n      \"number, number, number\",\n      \"10, 100, 100\"\n    );\n    let userSpacingArr = (userSpacingStr??\"\").split(\",\");\n    componentComponentSpacing = userSpacingArr[0] ?? \"10\";\n    nodeNodeSpacing = userSpacingArr[1] ?? \"100\";\n    nodeNodeBetweenLayersSpacing = userSpacingArr[2] ?? \"100\";\n  }\n\n  let layoutOptionsJson = {};\n  try {\n    layoutOptionsJson = JSON.parse(settings[\"Layout Options JSON\"].value);\n  } catch (e) {\n    new Notice(\n      \"Error reading Layout Options JSON, see developer console for more information\",\n      4000\n    );\n    console.log(e);\n  }\n\n  layoutOptionsJson[\"elk.algorithm\"] = selectedAlgorithm;\n  layoutOptionsJson[\"org.eclipse.elk.spacing.componentComponent\"] =\n    componentComponentSpacing;\n  layoutOptionsJson[\"org.eclipse.elk.spacing.nodeNode\"] = nodeNodeSpacing;\n  layoutOptionsJson[\"org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers\"] =\n    nodeNodeBetweenLayersSpacing;\n  layoutOptionsJson[\"org.eclipse.elk.layered.nodePlacement.strategy\"] =\n    nodePlacementStrategy;\n  layoutOptionsJson[\"org.eclipse.elk.disco.componentCompaction.componentLayoutAlgorithm\"] = \n    discoComponentLayoutAlgorithm;\n  layoutOptionsJson[\"org.eclipse.elk.direction\"] = direction;\n\n  const graph = {\n    id: \"root\",\n    layoutOptions: layoutOptionsJson,\n    children: [],\n    edges: [],\n  };\n\n  let groupMap = new Map();\n  let targetElkMap = new Map();\n  let arrowEls = [];\n\n  for (let i = 0; i \u003c groups.length; i++) {\n    const elements = groups[i];\n    if (\n      elements.length === 1 \u0026\u0026\n      (elements[0].type === \"arrow\" || elements[0].type === \"line\")\n    ) {\n      if (\n        elements[0].type === \"arrow\" \u0026\u0026\n        elements[0].startBinding \u0026\u0026\n        elements[0].endBinding\n      ) {\n        arrowEls.push(elements[0]);\n      }\n    } else {\n      let elkId = \"g\" + i;\n      elements.reduce((result, el) =\u003e {\n        result.set(el.id, elkId);\n        return result;\n      }, targetElkMap);\n\n      const box = ea.getBoundingBox(elements);\n      groupMap.set(elkId, {\n        elements: elements,\n        boundingBox: box,\n      });\n\n      graph.children.push({\n        id: elkId,\n        width: box.width,\n        height: box.height,\n        x: box.topX,\n        y: box.topY,\n      });\n    }\n  }\n\n  for (let i = 0; i \u003c arrowEls.length; i++) {\n    const arrowEl = arrowEls[i];\n    const startElkId = targetElkMap.get(arrowEl.startBinding.elementId);\n    const endElkId = targetElkMap.get(arrowEl.endBinding.elementId);\n\n    graph.edges.push({\n      id: \"e\" + i,\n      sources: [startElkId],\n      targets: [endElkId],\n    });\n  }\n\n  const initTopX =\n    Math.min(...Array.from(groupMap.values()).map((v) =\u003e v.boundingBox.topX)) -\n    12;\n  const initTopY =\n    Math.min(...Array.from(groupMap.values()).map((v) =\u003e v.boundingBox.topY)) -\n    12;\n\n  elk\n    .layout(graph)\n    .then((resultGraph) =\u003e {\n      for (const elkEl of resultGraph.children) {\n        const group = groupMap.get(elkEl.id);\n        for (const groupEl of group.elements) {\n          const originalDistancX = groupEl.x - group.boundingBox.topX;\n          const originalDistancY = groupEl.y - group.boundingBox.topY;\n          const groupElDistanceX =\n            elkEl.x + initTopX + originalDistancX - groupEl.x;\n          const groupElDistanceY =\n            elkEl.y + initTopY + originalDistancY - groupEl.y;\n\n          groupEl.x = groupEl.x + groupElDistanceX;\n          groupEl.y = groupEl.y + groupElDistanceY;\n\n          if (stickynotesMap.has(groupEl.id)) {\n            const stickynote = stickynotesMap.get(groupEl.id);\n            stickynote.x = stickynote.x + groupElDistanceX;\n            stickynote.y = stickynote.y + groupElDistanceY;\n          }\n        }\n      }\n\n      ea.copyViewElementsToEAforEditing(selectedElements);\n      ea.addElementsToView(false, false);\n\n      normalizeSelectedArrows();\n    })\n    .catch(console.error);\n}\n\nfunction loadELK(doAfterLoaded) {\n  let script = document.createElement(\"script\");\n  script.onload = function () {\n    if (typeof ELK !== \"undefined\") {\n      doAfterLoaded();\n    }\n  };\n  script.src =\n    \"https://cdn.jsdelivr.net/npm/elkjs@0.8.2/lib/elk.bundled.min.js\";\n  document.head.appendChild(script);\n}\n\n/*\n * Normalize Selected Arrows\n */\n\nfunction normalizeSelectedArrows() {\n  let gapValue = 2;\n\n  const selectedIndividualArrows = ea.getMaximumGroups(ea.getViewSelectedElements())\n    .reduce((result, g) =\u003e [...result, ...g.filter(el =\u003e el.type === 'arrow')], []);\n\n  const allElements = ea.getViewElements();\n  for (const arrow of selectedIndividualArrows) {\n    const startBindingEl = allElements.filter(\n      (el) =\u003e el.id === (arrow.startBinding || {}).elementId\n    )[0];\n    const endBindingEl = allElements.filter(\n      (el) =\u003e el.id === (arrow.endBinding || {}).elementId\n    )[0];\n\n    if (startBindingEl) {\n      recalculateStartPointOfLine(\n        arrow,\n        startBindingEl,\n        endBindingEl,\n        gapValue\n      );\n    }\n    if (endBindingEl) {\n      recalculateEndPointOfLine(arrow, endBindingEl, startBindingEl, gapValue);\n    }\n  }\n\n  ea.copyViewElementsToEAforEditing(selectedIndividualArrows);\n  ea.addElementsToView(false, false);\n}\n\nfunction recalculateStartPointOfLine(line, el, elB, gapValue) {\n  const aX = el.x + el.width / 2;\n  const bX =\n    line.points.length \u003c= 2 \u0026\u0026 elB\n      ? elB.x + elB.width / 2\n      : line.x + line.points[1][0];\n  const aY = el.y + el.height / 2;\n  const bY =\n    line.points.length \u003c= 2 \u0026\u0026 elB\n      ? elB.y + elB.height / 2\n      : line.y + line.points[1][1];\n\n  line.startBinding.gap = gapValue;\n  line.startBinding.focus = 0;\n  const intersectA = ea.intersectElementWithLine(\n    el,\n    [bX, bY],\n    [aX, aY],\n    line.startBinding.gap\n  );\n\n  if (intersectA.length \u003e 0) {\n    line.points[0] = [0, 0];\n    for (let i = 1; i \u003c line.points.length; i++) {\n      line.points[i][0] -= intersectA[0][0] - line.x;\n      line.points[i][1] -= intersectA[0][1] - line.y;\n    }\n    line.x = intersectA[0][0];\n    line.y = intersectA[0][1];\n  }\n}\n\nfunction recalculateEndPointOfLine(line, el, elB, gapValue) {\n  const aX = el.x + el.width / 2;\n  const bX =\n    line.points.length \u003c= 2 \u0026\u0026 elB\n      ? elB.x + elB.width / 2\n      : line.x + line.points[line.points.length - 2][0];\n  const aY = el.y + el.height / 2;\n  const bY =\n    line.points.length \u003c= 2 \u0026\u0026 elB\n      ? elB.y + elB.height / 2\n      : line.y + line.points[line.points.length - 2][1];\n\n  line.endBinding.gap = gapValue;\n  line.endBinding.focus = 0;\n  const intersectA = ea.intersectElementWithLine(\n    el,\n    [bX, bY],\n    [aX, aY],\n    line.endBinding.gap\n  );\n\n  if (intersectA.length \u003e 0) {\n    line.points[line.points.length - 1] = [\n      intersectA[0][0] - line.x,\n      intersectA[0][1] - line.y,\n    ];\n  }\n}","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Excalidraw/Scripts/Downloaded/Box-Each-Selected-Groups":{"title":"","content":"/*\r\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-download-raw.jpg)\r\n\r\nDownload this file and save to your Obsidian Vault including the first line, or open it in \"Raw\" and copy the entire contents to Obsidian.\r\n\r\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-box-each-selected-groups.png)\r\n\r\nThis script will add encapsulating boxes around each of the currently selected groups in Excalidraw.\r\n\r\nYou can focus on content creation first, and then batch add consistent style boxes to each group of text.\r\n\r\nTips 1: You can copy the desired style to the global state using script `Copy Selected Element Style to Global`, then add boxes with the same global style using script `Box Each Selected Groups`.\r\n\r\nTips 2: Next you can use scripts `Expand rectangles horizontally keep text centered` and `Expand rectangles vertically keep text centered` to make the boxes the same size, if you wish.\r\n\r\nTips 3: If you want the left and right margins to be different from the top and bottom margins, input something like `32,16`, this will create a box with left and right margins of `32` and top and bottom margins of `16`.\r\n\r\nSee documentation for more details:\r\nhttps://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html\r\n\r\n```javascript\r\n*/\r\nif(!ea.verifyMinimumPluginVersion || !ea.verifyMinimumPluginVersion(\"1.5.21\")) {\r\n  new Notice(\"This script requires a newer version of Excalidraw. Please install the latest version.\");\r\n  return;\r\n}\r\nsettings = ea.getScriptSettings();\r\n//set default values on first run\r\nif(!settings[\"Default padding\"]) {\r\n\tsettings = {\r\n\t  \"Prompt for padding?\": true,\r\n\t  \"Default padding\" : {\r\n\t\t\tvalue: 10,\r\n\t\t  description: \"Padding between the bounding box of the selected elements, and the box the script creates\"\r\n\t  },\r\n\t  \"Remember last padding?\": false\r\n\t};\r\n\tea.setScriptSettings(settings);\r\n}\r\n\r\nlet paddingStr = settings[\"Default padding\"].value.toString();\r\nconst rememberLastPadding = settings[\"Remember last padding?\"];\r\n\r\nif(settings[\"Prompt for padding?\"]) {\r\n\tpaddingStr = await utils.inputPrompt(\"padding?\",\"string\",paddingStr);\r\n}\r\nif(!paddingStr) {\r\n\treturn;\r\n}\r\nif(rememberLastPadding) {\r\n\tsettings[\"Default padding\"].value = paddingStr;\r\n\tea.setScriptSettings(settings);\r\n}\r\nvar paddingLR = 0;\r\nvar paddingTB = 0;\r\nif(paddingStr.indexOf(',') \u003e 0) {\r\n\tconst paddingParts = paddingStr.split(',');\r\n\tpaddingLR = parseInt(paddingParts[0]);\r\n\tpaddingTB = parseInt(paddingParts[1]);\r\n}\r\nelse {\r\n\tpaddingLR = paddingTB = parseInt(paddingStr);\r\n}\r\n\r\nif(isNaN(paddingLR) || isNaN(paddingTB)) {\r\n\treturn;\r\n}\r\n\r\nconst selectedElements = ea.getViewSelectedElements();\r\nconst groups = ea.getMaximumGroups(selectedElements);\r\nconst allIndividualArrows = ea.getMaximumGroups(ea.getViewElements())\r\n\t.reduce((result, group) =\u003e (group.length === 1 \u0026\u0026 (group[0].type === 'arrow' || group[0].type === 'line')) ? \r\n\t\t\t[...result, group[0]] : result, []);\r\nfor(const elements of groups) {\r\n\tif(elements.length === 1 \u0026\u0026 elements[0].type ===\"arrow\" || elements[0].type===\"line\") {\r\n\t\t// individual arrows or lines are not affected\r\n\t\tcontinue;\r\n\t}\r\n\tconst box = ea.getBoundingBox(elements);\r\n\tcolor = ea\r\n\t\t\t.getExcalidrawAPI()\r\n\t\t\t.getAppState()\r\n\t\t\t.currentItemStrokeColor;\r\n\t// use current stroke with and style\r\n\tconst appState = ea.getExcalidrawAPI().getAppState();\r\n\tconst strokeWidth = appState.currentItemStrokeWidth;\r\n\tconst strokeStyle = appState.currentItemStrokeStyle;\r\n\tconst strokeSharpness = appState.currentItemStrokeSharpness;\r\n\tconst roughness = appState.currentItemRoughness;\r\n\tconst fillStyle = appState.currentItemFillStyle;\r\n\tconst backgroundColor = appState.currentItemBackgroundColor;\r\n\tea.style.strokeWidth = strokeWidth;\r\n\tea.style.strokeStyle = strokeStyle;\r\n\tea.style.strokeSharpness = strokeSharpness;\r\n\tea.style.roughness = roughness;\r\n\tea.style.fillStyle = fillStyle;\r\n\tea.style.backgroundColor = backgroundColor;\t\r\n\tea.style.strokeColor = color;\r\n\r\n\tconst id = ea.addRect(\r\n\t\tbox.topX - paddingLR,\r\n\t\tbox.topY - paddingTB,\r\n\t\tbox.width + 2*paddingLR,\r\n\t\tbox.height + 2*paddingTB\r\n\t);\r\n\r\n\t// Change the join point in the group to the new box\r\n\tconst elementsWithBounded = elements.filter(el =\u003e (el.boundElements || []).length \u003e 0);\r\n\tconst boundedElementsCollection = elementsWithBounded.reduce((result, el) =\u003e [...result, ...el.boundElements], []);\r\n\tfor(const el of elementsWithBounded) {\r\n\t\tel.boundElements = [];\r\n\t}\r\n\r\n\tconst newRect = ea.getElement(id);\r\n\tnewRect.boundElements = boundedElementsCollection;\r\n\r\n    const elementIds = elements.map(el =\u003e el.id);\r\n\r\n\tconst startBindingLines = allIndividualArrows.filter(el =\u003e elementIds.includes((el.startBinding||{}).elementId));\r\n\tfor(startBindingLine of startBindingLines) {\r\n\t\tstartBindingLine.startBinding.elementId = id;\r\n\t\trecalculateStartPointOfLine(startBindingLine, newRect);\r\n\t}\r\n\r\n\tconst endBindingLines = allIndividualArrows.filter(el =\u003e elementIds.includes((el.endBinding||{}).elementId));\r\n\tfor(endBindingLine of endBindingLines) {\r\n\t\tendBindingLine.endBinding.elementId = id;\r\n\t\trecalculateEndPointOfLine(endBindingLine, newRect);\r\n\t}\r\n\r\n\tea.copyViewElementsToEAforEditing(elements);\r\n\tea.addToGroup([id].concat(elements.map((el)=\u003eel.id)));\r\n}\r\n\r\nawait ea.addElementsToView(false,false);\r\n\r\nfunction recalculateStartPointOfLine(line, el) {\r\n\tconst aX = el.x + el.width/2;\r\n    const bX = line.x + line.points[1][0];\r\n    const aY = el.y + el.height/2;\r\n    const bY = line.y + line.points[1][1];\r\n\r\n\tline.startBinding.gap = 8;\r\n\tline.startBinding.focus = 0;\r\n\tconst intersectA = ea.intersectElementWithLine(\r\n            \tel,\r\n\t\t\t\t[bX, bY],\r\n            \t[aX, aY],\r\n            \tline.startBinding.gap\r\n          \t);\r\n\r\n    if(intersectA.length \u003e 0) {\r\n\t\tline.points[0] = [0, 0];\r\n\t\tfor(var i = 1; i\u003cline.points.length; i++) {\r\n\t\t\tline.points[i][0] -= intersectA[0][0] - line.x;\r\n\t\t\tline.points[i][1] -= intersectA[0][1] - line.y;\r\n\t\t}\r\n\t\tline.x = intersectA[0][0];\r\n\t\tline.y = intersectA[0][1];\r\n\t}\r\n}\r\n\r\nfunction recalculateEndPointOfLine(line, el) {\r\n\tconst aX = el.x + el.width/2;\r\n    const bX = line.x + line.points[line.points.length-2][0];\r\n    const aY = el.y + el.height/2;\r\n    const bY = line.y + line.points[line.points.length-2][1];\r\n\r\n\tline.endBinding.gap = 8;\r\n\tline.endBinding.focus = 0;\r\n\tconst intersectA = ea.intersectElementWithLine(\r\n            \tel,\r\n\t\t\t\t[bX, bY],\r\n            \t[aX, aY],\r\n            \tline.endBinding.gap\r\n          \t);\r\n\r\n    if(intersectA.length \u003e 0) {\r\n    \tline.points[line.points.length - 1] = [intersectA[0][0] - line.x, intersectA[0][1] - line.y];\r\n\t}\r\n}\r\n","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Excalidraw/Scripts/Downloaded/Box-Selected-Elements":{"title":"","content":"/*\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-box-elements.jpg)\n\nThis script will add an encapsulating box around the currently selected elements in Excalidraw.\n\nSee documentation for more details:\nhttps://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html\n\n```javascript\n*/\nif(!ea.verifyMinimumPluginVersion || !ea.verifyMinimumPluginVersion(\"1.5.21\")) {\n  new Notice(\"This script requires a newer version of Excalidraw. Please install the latest version.\");\n  return;\n}\nsettings = ea.getScriptSettings();\n//set default values on first run\nif(!settings[\"Default padding\"]) {\n\tsettings = {\n\t\t\"Prompt for padding?\": true,\n\t  \"Default padding\" : {\n\t\t\tvalue: 10,\n\t\t  description: \"Padding between the bounding box of the selected elements, and the box the script creates\"\n\t\t}\n\t};\n\tea.setScriptSettings(settings);\n}\n\nlet padding = settings[\"Default padding\"].value;\n\nif(settings[\"Prompt for padding?\"]) {\n\tpadding = parseInt (await utils.inputPrompt(\"padding?\",\"number\",padding.toString()));\n}\n\nif(isNaN(padding)) {\n  new Notice(\"The padding value provided is not a number\");\n  return;\n}\nelements = ea.getViewSelectedElements();\nconst box = ea.getBoundingBox(elements);\ncolor = ea\n        .getExcalidrawAPI()\n        .getAppState()\n        .currentItemStrokeColor;\n//uncomment for random color:\n//color = '#'+(Math.random()*0xFFFFFF\u003c\u003c0).toString(16).padStart(6,\"0\");\nea.style.strokeColor = color;\nid = ea.addRect(\n\tbox.topX - padding,\n\tbox.topY - padding,\n\tbox.width + 2*padding,\n\tbox.height + 2*padding\n);\nea.copyViewElementsToEAforEditing(elements);\nea.addToGroup([id].concat(elements.map((el)=\u003eel.id)));\nea.addElementsToView(false,false);","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/Excalidraw/Scripts/Downloaded/Split-text-by-lines":{"title":"","content":"/*\r\n## requires Excalidraw 1.5.1 or higher\r\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-download-raw.jpg)\r\n\r\nDownload this file and save to your Obsidian Vault including the first line, or open it in \"Raw\" and copy the entire contents to Obsidian.\r\n\r\n![](https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-split-lines.jpg)\r\n\r\nSplit lines of text into separate text elements for easier reorganization\r\n\r\nSee documentation for more details:\r\nhttps://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html\r\n\r\n```javascript\r\n*/\r\nelements = ea.getViewSelectedElements().filter((el)=\u003eel.type===\"text\");\r\nelements.forEach((el)=\u003e{\r\n  ea.style.strokeColor = el.strokeColor;\r\n  ea.style.fontFamily  = el.fontFamily;\r\n  ea.style.fontSize    = el.fontSize;\r\n  const text = el.text.split(\"\\n\");\r\n  for(i=0;i\u003ctext.length;i++) {\r\n\tea.addText(el.x,el.y+i*el.height/text.length,text[i]);\r\n  }\r\n});\r\nea.addElementsToView(false,false);\r\nea.deleteViewElements(elements);","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"\n## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/notes/Codedojo/4-kyu/Snail":{"title":"Snail","content":"\n\n# Snail\nGiven an¬†`n x n`¬†array, return the array elements arranged from outermost elements to the middle element, traveling clockwise.\n\n```\narray = [[1,2,3],\n         [4,5,6],\n         [7,8,9]]\nsnail(array) #=\u003e [1,2,3,6,9,8,7,4,5]\n```\n\nFor better understanding, please follow the numbers of the next array consecutively:\n\n```\narray = [[1,2,3],\n         [8,9,4],\n         [7,6,5]]\nsnail(array) #=\u003e [1,2,3,4,5,6,7,8,9]\n```\n\nThis image will illustrate things more clearly:\n\n![](http://www.haan.lu/files/2513/8347/2456/snail.png)\n\nNOTE: The idea is not sort the elements from the lowest value to the highest; the idea is to traverse the 2-d array in a clockwise snailshell pattern.\n\nNOTE 2: The 0x0 (empty matrix) is represented as en empty array inside an array¬†`[[]]`.\n\n## My solution\n```run-javascript\nsnail = function(array) {\n    // enjoy\n    let arr = array\n    let snail = []\n    while (arr[0] != null \u0026\u0026 arr.length !== 0){ // Continue till the array is empty\n    let cr = []; let cl = []; // Reset the coloumn right and left (cr, cl)\n\n      for (i=1; i\u003carr.length-1; i++){\n              cr.push(arr[i].pop())     // Takes the right most value of column\n              cl.unshift(arr[i].shift())// Takes the left most value of column\n            }\n  \n    snail.push(arr.shift()) // Inputs Top\n\n    snail.push(cr) // Inputs Right\n\n    if(arr[0] != null){         //\n          let last_r = arr.pop()// Inputs Bottom Value\n          last_r.reverse()      //\n          snail.push(last_r)}   //\n    \n      snail.push(cl)// Inputs Left\n\n      arr.length == 1 ? snail.push(arr.shift()) : null // Inputs Center Value\n      cr = []\n      cl= [] \n    }\n  return snail.flat()\n}\n\nconsole.log(snail([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]]))\n```\n\n\n![](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2000.53.26.excalidraw.svg)\n%%[üñã Edit in Excalidraw](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2000.53.26.excalidraw.md), and the [dark exported image](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2000.53.26.excalidraw.dark.svg)%%\n## Algorithm\nSnail = Top + Right + Bottom.reversed() + Left - Repeat till Array is empty\n\nIn order to do this question, I made the array it self a condition. The algorithm will stop when the array is empty\nSo the while loop:\n```javascript\nwhile (arr[0] != null \u0026\u0026 arr.length !== 0)\n```\nMakes sure that happens\nAfter words you We will make a new loop That goes through the array, excluding the first and last subarray (They are the top and bottom pieces)\nHence the lines\n```javascript\n let cr = []; let cl = []; // Reset the coloumn right and left (cr, cl)\n\n      for (i=1; i\u003carr.length-1; i++){\n              cr.push(arr[i].pop())     // Takes the right most value of column\n              cl.unshift(arr[i].shift())// Takes the left most value of column\n            }\n```\narr[i] represents a subarray, and so we can use this logic\n\nLets look at this step by step\n- **cr (Column Right)**\n\t- the array.pop() method \"pops\" The last value of array and returns it\n\t- We take this value and \"push\" it to cr which will push its last value\n- **cl(Column Left)**\n\t- The array.shift() method \"shifts\" the first value and returns it\n\t- We are taking this value and \"unshifting\" it the first value of Column left\n This can be illustrated in a diagram like so\n![](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2017.46.07.excalidraw.svg)\n%%[üñã Edit in Excalidraw](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2017.46.07.excalidraw.md), and the [dark exported image](notes/Codedojo/4%20kyu/attachments/Snail%202023-01-13%2017.46.07.excalidraw.dark.svg)%%\n Now we have left and right columns in an array cl and cr\n Now it's easy!\n```javascript\nsnail.push(arr.shift()) // Inputs Top\n\nsnail.push(cr) // Inputs Right\n\nif(arr[0] != null){         //\n    let last_r = arr.pop()// Inputs Bottom Value\n\tlast_r.reverse()      //\n\tsnail.push(last_r)}   //\n    \nsnail.push(cl)// Inputs Left\n\narr.length == 1 ? snail.push(arr.shift()) : null // Inputs Center Value\ncr = []\ncl= [] \n    }\nreturn snail.flat()\n}\n```\n1. Inputs the top/first sub array in the array\n2. Inputs the Right sub array in the array\n3. Inputs the Bottom Value IF array is not yet empty\n4. Inputs the Left Value\n5. Checks if array only has 1 subarray remaining, This would mean a centter value. So just add that\n6. array.flat() Flattens the subarray in to their elements so\n```javascript\nlet array = [1, [2], [3,4]]\nconsole.log(array.flat())\n```","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/notes/Codedojo/4-kyu/attachments/Snail-2023-01-13-00.53.26.excalidraw":{"title":"","content":"==‚ö†  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ‚ö†==\n\n\n# Text Elements\n[ \n[1, 2, 3, 4, 5]\n[6, 7, 8, 9, 10]\n[11, 12, 13, 14, 15]\n[16, 17, 18, 19, 20]\n[21, 22, 23, 24, 25] \n                    ] ^9X76BBTu\n\nLeft ^QGG3I5PK\n\nTop ^ls5vnNKZ\n\nRight ^vSC8OrLh\n\nBottom ^hdVU14yu\n\n%%\n# Drawing\n```json\n{\n\t\"type\": \"excalidraw\",\n\t\"version\": 2,\n\t\"source\": \"https://excalidraw.com\",\n\t\"elements\": [\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 249,\n\t\t\t\"versionNonce\": 635195521,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"9X76BBTu\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -209.613413780008,\n\t\t\t\"y\": -233.3618241749174,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 220,\n\t\t\t\"height\": 175,\n\t\t\t\"seed\": 1388077811,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"2D4Onszk1XWa5ey4YUwVw\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673613475368,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"text\": \"[ \\n[1, 2, 3, 4, 5]\\n[6, 7, 8, 9, 10]\\n[11, 12, 13, 14, 15]\\n[16, 17, 18, 19, 20]\\n[21, 22, 23, 24, 25] \\n                    ]\",\n\t\t\t\"rawText\": \"[ \\n[1, 2, 3, 4, 5]\\n[6, 7, 8, 9, 10]\\n[11, 12, 13, 14, 15]\\n[16, 17, 18, 19, 20]\\n[21, 22, 23, 24, 25] \\n                    ]\",\n\t\t\t\"baseline\": 168,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"[ \\n[1, 2, 3, 4, 5]\\n[6, 7, 8, 9, 10]\\n[11, 12, 13, 14, 15]\\n[16, 17, 18, 19, 20]\\n[21, 22, 23, 24, 25] \\n                    ]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"2HgKZmsLiZbIklDw8loS8\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": -216.0132011181487,\n\t\t\t\"y\": -210.53986026357182,\n\t\t\t\"width\": 150.16871572263,\n\t\t\t\"height\": 27.160950322006116,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 60,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"seed\": 1483031201,\n\t\t\t\"version\": 137,\n\t\t\t\"versionNonce\": 470798881,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"2D4Onszk1XWa5ey4YUwVw\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673613497319,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"id\": \"XJmWLU7TIYOAE4g6u3tx_\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"x\": -95.79563607856235,\n\t\t\t\"y\": -179.4636268745701,\n\t\t\t\"width\": 68.23059453968563,\n\t\t\t\"height\": 71.94782027970261,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 60,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1747347823,\n\t\t\t\"version\": 372,\n\t\t\t\"versionNonce\": 1659005185,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613447385,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33.9411053474678,\n\t\t\t\t\t68.46343045485912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68.23059453968563,\n\t\t\t\t\t65.75338092637284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30.25478246814373,\n\t\t\t\t\t-3.4843898248434897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": [\n\t\t\t\t-0.5874715042357934,\n\t\t\t\t-0.29373575211792513\n\t\t\t],\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"bH2bcCC3SEy9pOgp9PlyK\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": -84.29443001581944,\n\t\t\t\"y\": -180.6354965019214,\n\t\t\t\"width\": 40.593714702024556,\n\t\t\t\"height\": 68.72067964677845,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 409802049,\n\t\t\t\"version\": 95,\n\t\t\t\"versionNonce\": 527870625,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613492350,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40.593714702024556,\n\t\t\t\t\t68.72067964677845\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"focus\": -0.5602585777494142,\n\t\t\t\t\"gap\": 2.743413439644314,\n\t\t\t\t\"elementId\": \"2HgKZmsLiZbIklDw8loS8\"\n\t\t\t},\n\t\t\t\"endBinding\": {\n\t\t\t\t\"elementId\": \"l2mwGp6YuukA6UEIwQPyr\",\n\t\t\t\t\"focus\": 0.6395763767795636,\n\t\t\t\t\"gap\": 1\n\t\t\t},\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"l2mwGp6YuukA6UEIwQPyr\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": -216.0132011181487,\n\t\t\t\"y\": -111.04646648063886,\n\t\t\t\"width\": 214.34410824928378,\n\t\t\t\"height\": 27.160950322006116,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 60,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"seed\": 1458724271,\n\t\t\t\"version\": 210,\n\t\t\t\"versionNonce\": 395244303,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"BDTbBHsymd-ofM5a_DWEg\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"bH2bcCC3SEy9pOgp9PlyK\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"EZEu1XJ_3wZXnGcNprED0\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673613472393,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"id\": \"U4vWmp6St6LEbLdE00b2w\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"x\": -212.5173231572413,\n\t\t\t\"y\": -182.90928553371933,\n\t\t\t\"width\": 32.912593283406345,\n\t\t\t\"height\": 68.46343045485918,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 60,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1164813871,\n\t\t\t\"version\": 538,\n\t\t\t\"versionNonce\": 2109027919,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613462193,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2.068762750337754,\n\t\t\t\t\t68.46343045485918\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32.912593283406345,\n\t\t\t\t\t67.47621025594745\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31.5469044653247,\n\t\t\t\t\t1.2533908314866533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": [\n\t\t\t\t-0.5874715042357934,\n\t\t\t\t-0.29373575211792513\n\t\t\t],\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"I_VICJTJflT2M8LiBzRJt\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": -7.196735124220538,\n\t\t\t\"y\": -96.76088985509963,\n\t\t\t\"width\": 197.69466556868505,\n\t\t\t\"height\": 0,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 427267183,\n\t\t\t\"version\": 51,\n\t\t\t\"versionNonce\": 949455855,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613492350,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-197.69466556868505,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"EZEu1XJ_3wZXnGcNprED0\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": -195.4158393802453,\n\t\t\t\"y\": -113.55847581845194,\n\t\t\t\"width\": 0,\n\t\t\t\"height\": 83.98792981676164,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 6780719,\n\t\t\t\"version\": 37,\n\t\t\t\"versionNonce\": 1735044737,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613492350,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-83.98792981676164\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"elementId\": \"l2mwGp6YuukA6UEIwQPyr\",\n\t\t\t\t\"focus\": -0.8078103297903712,\n\t\t\t\t\"gap\": 2.512009337813076\n\t\t\t},\n\t\t\t\"endBinding\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"2D4Onszk1XWa5ey4YUwVw\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": -213.50554734077858,\n\t\t\t\"y\": -199.69994229718182,\n\t\t\t\"width\": 148.1633223434154,\n\t\t\t\"height\": 0,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 593021281,\n\t\t\t\"version\": 22,\n\t\t\t\"versionNonce\": 482227727,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613492350,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t148.1633223434154,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"elementId\": \"9X76BBTu\",\n\t\t\t\t\"focus\": -0.615292778540165,\n\t\t\t\t\"gap\": 3.8921335607705885\n\t\t\t},\n\t\t\t\"endBinding\": {\n\t\t\t\t\"elementId\": \"2HgKZmsLiZbIklDw8loS8\",\n\t\t\t\t\"focus\": 0.20180127441215595,\n\t\t\t\t\"gap\": 1\n\t\t\t},\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"ls5vnNKZ\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": -163.5434967831153,\n\t\t\t\"y\": -250.90926087175944,\n\t\t\t\"width\": 38,\n\t\t\t\"height\": 25,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#087f5b\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 53984129,\n\t\t\t\"version\": 39,\n\t\t\t\"versionNonce\": 1340623137,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613543513,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"Top\",\n\t\t\t\"rawText\": \"Top\",\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"Top\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"vSC8OrLh\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": -29.59351640869039,\n\t\t\t\"y\": -171.65911171132797,\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 25,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#087f5b\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1716474543,\n\t\t\t\"version\": 91,\n\t\t\t\"versionNonce\": 947197295,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613543513,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"Right\",\n\t\t\t\"rawText\": \"Right\",\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"Right\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"hdVU14yu\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": -136.839642174709,\n\t\t\t\"y\": -62.25944928334101,\n\t\t\t\"width\": 73,\n\t\t\t\"height\": 25,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#087f5b\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1878149025,\n\t\t\t\"version\": 277,\n\t\t\t\"versionNonce\": 86277377,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613543513,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"Bottom\",\n\t\t\t\"rawText\": \"Bottom\",\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"Bottom\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"QGG3I5PK\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": -287.1565011800926,\n\t\t\t\"y\": -163.47567239584862,\n\t\t\t\"width\": 45,\n\t\t\t\"height\": 25,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#087f5b\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1260821615,\n\t\t\t\"version\": 369,\n\t\t\t\"versionNonce\": 724471695,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613543513,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"Left\",\n\t\t\t\"rawText\": \"Left\",\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"Left\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"BDTbBHsymd-ofM5a_DWEg\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": -57.947326145300394,\n\t\t\t\"y\": -197.08708731630227,\n\t\t\t\"width\": 7.756247048022033,\n\t\t\t\"height\": 0,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 60,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"seed\": 277878209,\n\t\t\t\"version\": 86,\n\t\t\t\"versionNonce\": 983907919,\n\t\t\t\"isDeleted\": true,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613497318,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7.756247048022033,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"focus\": -0.009403368602315344,\n\t\t\t\t\"gap\": 7.4664519178246564,\n\t\t\t\t\"elementId\": \"2HgKZmsLiZbIklDw8loS8\"\n\t\t\t},\n\t\t\t\"endBinding\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"Cb79M9eL\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": -128.22549552683603,\n\t\t\t\"y\": 37.66465183198562,\n\t\t\t\"width\": 73,\n\t\t\t\"height\": 25,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"#be4bdb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 1623146625,\n\t\t\t\"version\": 202,\n\t\t\t\"versionNonce\": 552417231,\n\t\t\t\"isDeleted\": true,\n\t\t\t\"boundElements\": null,\n\t\t\t\"updated\": 1673613580461,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"Bottom\",\n\t\t\t\"rawText\": \"Bottom\",\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 1,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"baseline\": 18,\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"Bottom\"\n\t\t}\n\t],\n\t\"appState\": {\n\t\t\"theme\": \"dark\",\n\t\t\"viewBackgroundColor\": \"#ffffff\",\n\t\t\"currentItemStrokeColor\": \"#e67700\",\n\t\t\"currentItemBackgroundColor\": \"#be4bdb\",\n\t\t\"currentItemFillStyle\": \"hachure\",\n\t\t\"currentItemStrokeWidth\": 1,\n\t\t\"currentItemStrokeStyle\": \"solid\",\n\t\t\"currentItemRoughness\": 1,\n\t\t\"currentItemOpacity\": 100,\n\t\t\"currentItemFontFamily\": 1,\n\t\t\"currentItemFontSize\": 20,\n\t\t\"currentItemTextAlign\": \"left\",\n\t\t\"currentItemStartArrowhead\": null,\n\t\t\"currentItemEndArrowhead\": \"arrow\",\n\t\t\"scrollX\": 428.4285062052096,\n\t\t\"scrollY\": 228.44292693238924,\n\t\t\"zoom\": {\n\t\t\t\"value\": 2.3217621916081983\n\t\t},\n\t\t\"currentItemRoundness\": \"sharp\",\n\t\t\"gridSize\": null,\n\t\t\"colorPalette\": {}\n\t},\n\t\"files\": {}\n}\n```\n%%","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/notes/Codedojo/4-kyu/attachments/Snail-2023-01-13-17.46.07.excalidraw":{"title":"","content":"==‚ö†  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ‚ö†==\n\n\n# Text Elements\narr[i] = [ x, y, z] ^sxP0RlSl\n\narr[i].pop() ^Pha9fOuW\n\ncl.unshift(    ) ^yDfSMl9M\n\ncl = [   , .....] ^5lfNfjIj\n\narr[i].shift() ^aOIqtDBO\n\ncr.push(    ) ^ruli0nAG\n\ncr = [.... ,   ] ^3otwYK5d\n\n%%\n# Drawing\n```json\n{\n\t\"type\": \"excalidraw\",\n\t\"version\": 2,\n\t\"source\": \"https://excalidraw.com\",\n\t\"elements\": [\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 87,\n\t\t\t\"versionNonce\": 1801552769,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"sxP0RlSl\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -205.40200432201217,\n\t\t\t\"y\": -195.38553173950362,\n\t\t\t\"strokeColor\": \"#000000\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 224,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 427700385,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"arr[i] = [ x, y, z]\",\n\t\t\t\"rawText\": \"arr[i] = [ x, y, z]\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"arr[i] = [ x, y, z]\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"ellipse\",\n\t\t\t\"version\": 183,\n\t\t\t\"versionNonce\": 403386639,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"H34aZ_P0i0StUpZSZJ7r4\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -14.515887505986825,\n\t\t\t\"y\": -193.89347319666717,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 22.49856882131388,\n\t\t\t\"height\": 22.49856882131388,\n\t\t\t\"seed\": 1424287969,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"sydAX-H_ERZ0AffVyCZ-d\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"ellipse\",\n\t\t\t\"version\": 194,\n\t\t\t\"versionNonce\": 1421883183,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"mr0bRZi4GEE_6qR1tPVxb\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -80.23553594799893,\n\t\t\t\"y\": -193.89347319666717,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 22.49856882131388,\n\t\t\t\"height\": 22.49856882131388,\n\t\t\t\"seed\": 592958081,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"R6Cd1SGTiEo0DRrUlxyee\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"version\": 455,\n\t\t\t\"versionNonce\": 2145736513,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"sydAX-H_ERZ0AffVyCZ-d\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -21.01800328290779,\n\t\t\t\"y\": -185.86625359949073,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 151.0003687836479,\n\t\t\t\"height\": 103.24146288470587,\n\t\t\t\"seed\": 133130337,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"Pha9fOuW\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"elementId\": \"H34aZ_P0i0StUpZSZJ7r4\",\n\t\t\t\t\"focus\": -1.3080163563606855,\n\t\t\t\t\"gap\": 6.792165372600779\n\t\t\t},\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24.181734647155437,\n\t\t\t\t\t-51.698896368775024\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99.27760604838328,\n\t\t\t\t\t-40.96177914118579\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126.81863413649245,\n\t\t\t\t\t-103.24146288470587\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 45,\n\t\t\t\"versionNonce\": 1563392335,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"Pha9fOuW\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -126.87615371478933,\n\t\t\t\"y\": -253.67146373162194,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 142,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 500206465,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"arr[i].pop()\",\n\t\t\t\"rawText\": \"arr[i].pop()\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"sydAX-H_ERZ0AffVyCZ-d\",\n\t\t\t\"originalText\": \"arr[i].pop()\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 147,\n\t\t\t\"versionNonce\": 1788528417,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"ruli0nAG\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -7.151723512333433,\n\t\t\t\"y\": -312.7957010874677,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 153,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 458924033,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"obUw3UF5150QmBOmm4-SV\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"cr.push(    )\",\n\t\t\t\"rawText\": \"cr.push(    )\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"cr.push(    )\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"version\": 102,\n\t\t\t\"versionNonce\": 917600111,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"obUw3UF5150QmBOmm4-SV\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 51.15793192732458,\n\t\t\t\"y\": -326.7910581622624,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 4.722357101352635,\n\t\t\t\"height\": 44.18629738932748,\n\t\t\t\"seed\": 81456065,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"focus\": -0.2627954839586177,\n\t\t\t\t\"gap\": 13.995357074794697,\n\t\t\t\t\"elementId\": \"ruli0nAG\"\n\t\t\t},\n\t\t\t\"endBinding\": {\n\t\t\t\t\"focus\": -0.06903557716659049,\n\t\t\t\t\"gap\": 6.811183972724024,\n\t\t\t\t\"elementId\": \"mD91bwVi2YhJZzLt1fLM_\"\n\t\t\t},\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4.722357101352635,\n\t\t\t\t\t-44.18629738932748\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 94,\n\t\t\t\"versionNonce\": 1624718081,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"3otwYK5d\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -98.35911497113639,\n\t\t\t\"y\": -403.13460388130403,\n\t\t\t\"strokeColor\": \"#5f3dc4\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 189,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 1337510849,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"cr = [.... ,   ]\",\n\t\t\t\"rawText\": \"cr = [.... ,   ]\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"cr = [.... ,   ]\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"version\": 381,\n\t\t\t\"versionNonce\": 663662991,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"R6Cd1SGTiEo0DRrUlxyee\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -72.31614876035697,\n\t\t\t\"y\": -166.09757866810617,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 162.22890984775444,\n\t\t\t\"height\": 76.74039780151216,\n\t\t\t\"seed\": 2046116079,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"id\": \"aOIqtDBO\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"elementId\": \"mr0bRZi4GEE_6qR1tPVxb\",\n\t\t\t\t\"focus\": 1.1964447796958446,\n\t\t\t\t\"gap\": 5.6290603514863005\n\t\t\t},\n\t\t\t\"endBinding\": {\n\t\t\t\t\"elementId\": \"tLUjyk9B_XvR7NuCC6rlI\",\n\t\t\t\t\"focus\": -0.5069443503592478,\n\t\t\t\t\"gap\": 4.734222926034391\n\t\t\t},\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31.492652388502663,\n\t\t\t\t\t35.588318394270004\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130.73625745925176,\n\t\t\t\t\t17.173142369516142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108.86634440545781,\n\t\t\t\t\t76.74039780151216\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 39,\n\t\t\t\"versionNonce\": 1662661345,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"aOIqtDBO\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -211.4856430715012,\n\t\t\t\"y\": -150.89398616117197,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 165,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 86211791,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"arr[i].shift()\",\n\t\t\t\"rawText\": \"arr[i].shift()\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": \"R6Cd1SGTiEo0DRrUlxyee\",\n\t\t\t\"originalText\": \"arr[i].shift()\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 245,\n\t\t\t\"versionNonce\": 419407791,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"yDfSMl9M\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -313.4827302587058,\n\t\t\t\"y\": -83.66339309219188,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 189,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 1719857295,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"sydAX-H_ERZ0AffVyCZ-d\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"obUw3UF5150QmBOmm4-SV\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"R6Cd1SGTiEo0DRrUlxyee\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"Iinj4P-kvyDkZKsPhMxpu\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"cl.unshift(    )\",\n\t\t\t\"rawText\": \"cl.unshift(    )\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"cl.unshift(    )\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"version\": 123,\n\t\t\t\"versionNonce\": 905129665,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"Iinj4P-kvyDkZKsPhMxpu\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -236.47948771102233,\n\t\t\t\"y\": -45.91919674869842,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 4.301769966769143,\n\t\t\t\"height\": 38.59934937554822,\n\t\t\t\"seed\": 1639658785,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 2\n\t\t\t},\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": {\n\t\t\t\t\"elementId\": \"yDfSMl9M\",\n\t\t\t\t\"focus\": -0.02983742001631509,\n\t\t\t\t\"gap\": 12.744196343493456\n\t\t\t},\n\t\t\t\"endBinding\": {\n\t\t\t\t\"elementId\": \"eSQqMF7NUZJ3CzoOiQ8lX\",\n\t\t\t\t\"focus\": 0.40112914640432856,\n\t\t\t\t\"gap\": 14.49621295881667\n\t\t\t},\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4.301769966769143,\n\t\t\t\t\t38.59934937554822\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"version\": 183,\n\t\t\t\"versionNonce\": 959240655,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"5lfNfjIj\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -324.37780843239295,\n\t\t\t\"y\": 9.960560712329539,\n\t\t\t\"strokeColor\": \"#364fc7\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 200,\n\t\t\t\"height\": 24,\n\t\t\t\"seed\": 1513942127,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"obUw3UF5150QmBOmm4-SV\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"fontSize\": 20,\n\t\t\t\"fontFamily\": 3,\n\t\t\t\"text\": \"cl = [   , .....]\",\n\t\t\t\"rawText\": \"cl = [   , .....]\",\n\t\t\t\"baseline\": 19,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"cl = [   , .....]\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 55,\n\t\t\t\"versionNonce\": 1610722977,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"mD91bwVi2YhJZzLt1fLM_\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 40.35398946965523,\n\t\t\t\"y\": -405.92059028235093,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 28.8723678832485,\n\t\t\t\"height\": 28.132050758036996,\n\t\t\t\"seed\": 250487745,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 94,\n\t\t\t\"versionNonce\": 1563346927,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"yhSwsHhBaRbrzvE_VKAvT\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": 92.17618823446026,\n\t\t\t\"y\": -316.34221813175935,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 28.8723678832485,\n\t\t\t\"height\": 28.132050758036996,\n\t\t\t\"seed\": 668337057,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 118,\n\t\t\t\"versionNonce\": 1744122497,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"tLUjyk9B_XvR7NuCC6rlI\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -178.779879592949,\n\t\t\t\"y\": -84.62295794055962,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 28.8723678832485,\n\t\t\t\"height\": 28.132050758036996,\n\t\t\t\"seed\": 1049826145,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"R6Cd1SGTiEo0DRrUlxyee\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 197,\n\t\t\t\"versionNonce\": 588116495,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"eSQqMF7NUZJ3CzoOiQ8lX\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -249.85032361325307,\n\t\t\t\"y\": 7.176365585666474,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 28.8723678832485,\n\t\t\t\"height\": 28.132050758036996,\n\t\t\t\"seed\": 1062045071,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": {\n\t\t\t\t\"type\": 3\n\t\t\t},\n\t\t\t\"boundElements\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"obUw3UF5150QmBOmm4-SV\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"Iinj4P-kvyDkZKsPhMxpu\",\n\t\t\t\t\t\"type\": \"arrow\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"updated\": 1673614430397,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t},\n\t\t{\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"version\": 132,\n\t\t\t\"versionNonce\": 1420050799,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"id\": \"duWFUQZQla1uwVVfLwK-z\",\n\t\t\t\"fillStyle\": \"hachure\",\n\t\t\t\"strokeWidth\": 1,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 2,\n\t\t\t\"opacity\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"x\": -328.85712780979134,\n\t\t\t\"y\": -408.6558500448707,\n\t\t\t\"strokeColor\": \"#495057\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"width\": 474.1263722185106,\n\t\t\t\"height\": 445.9153980557969,\n\t\t\t\"seed\": 908459599,\n\t\t\t\"groupIds\": [],\n\t\t\t\"roundness\": null,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1673614784588,\n\t\t\t\"link\": null,\n\t\t\t\"locked\": false\n\t\t}\n\t],\n\t\"appState\": {\n\t\t\"theme\": \"dark\",\n\t\t\"viewBackgroundColor\": \"#ffffff\",\n\t\t\"currentItemStrokeColor\": \"#495057\",\n\t\t\"currentItemBackgroundColor\": \"transparent\",\n\t\t\"currentItemFillStyle\": \"hachure\",\n\t\t\"currentItemStrokeWidth\": 1,\n\t\t\"currentItemStrokeStyle\": \"dashed\",\n\t\t\"currentItemRoughness\": 2,\n\t\t\"currentItemOpacity\": 100,\n\t\t\"currentItemFontFamily\": 3,\n\t\t\"currentItemFontSize\": 20,\n\t\t\"currentItemTextAlign\": \"left\",\n\t\t\"currentItemStartArrowhead\": null,\n\t\t\"currentItemEndArrowhead\": \"arrow\",\n\t\t\"scrollX\": 577.9079068160356,\n\t\t\"scrollY\": 636.0794771066335,\n\t\t\"zoom\": {\n\t\t\t\"value\": 1.0988631523746728\n\t\t},\n\t\t\"currentItemRoundness\": \"sharp\",\n\t\t\"gridSize\": null,\n\t\t\"colorPalette\": {}\n\t},\n\t\"files\": {}\n}\n```\n%%","lastmodified":"2023-01-13T14:25:00.520644908Z","tags":null},"/notes/Codedojo/5-kyu/ROT-13-Conversion":{"title":"ROT 13 Conversion","content":"\n# ROT13 conversion\n- [ROT13](https://www.codewars.com/kata/52223df9e8f98c7aa7000062/train/javascript)\nHow can you tell an extrovert from an introvert at NSA? Va gur ryringbef, gur rkgebireg ybbxf ng gur BGURE thl'f fubrf.\n\nI found this joke on USENET, but the punchline is scrambled. Maybe you can decipher it? According to Wikipedia, ROT13 ([http://en.wikipedia.org/wiki/ROT13](http://en.wikipedia.org/wiki/ROT13)) is frequently used to obfuscate jokes on USENET.\n\nHint: For this task you're only supposed to substitue characters. Not spaces, punctuation, numbers etc.\n\nTest examples:\n\n```\n\"EBG13 rknzcyr.\" --\u003e\n\"ROT13 example.\"\n\n\"This is my first ROT13 excercise!\" --\u003e\n\"Guvf vf zl svefg EBG13 rkprepvfr!\"\n```\n## My Solutions:\n````javascript\nfunction rot13(str) {\n  var lett = \"abcdefghijklmnopqrstuvwxyz\"\n  let sh = str.split(\"\")\n  for (i=0; i\u003csh.length; i++){\n    index = lett.indexOf(sh[i].toLowerCase())\n    if (index != -1){\n      jumped = index + 13\n      jumped \u003e= 26 ? jumped -=26 : jumped=jumped\n      sh[i] == sh[i].toUpperCase() ? sh[i] = lett[jumped].toUpperCase() :sh[i] = lett[jumped]\n    }\n  }\n  return sh.join(\"\")\n}\n\nconsole.log(rot13(\"Depression\"))\n````\n## Recommended:\n```javascript\nfunction rot13(str) {\n  return str.replace(/[a-z]/ig, function(x){\n    return String.fromCharCode(x.charCodeAt(0) + (x.toLowerCase() \u003c= 'm' ? 13: -13));\n  });\n}\nconsole.log(rot13(\"Depression\"))\n```\n\n\u003e [!info]-\n\u003e \n\u003e `str.replace(/[a-z]/ig, f(x))` \n\u003e - Regular Expression [a-z] takes all the alphabets, not case sensitive and replaces is it according to f(x)\n\u003e   \n\u003e`return String.fromCharCode(x.charCodeAt(0) + (x.toLowerCase() \u003c= 'm' ? 13: -13));\n  });`\n\u003e - Returns the Char + 13 if alphabet is smaller then m, or Char - 13 if alphabet is larger then 'm'; As Unicode characters are consecutive, it works for capitalised and non capitalised!\n\n\n\n\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"ü™¥ Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e üîó Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: üé® [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-01-13T14:25:00.524644964Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have Docker installed already, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nNow that you are happy with how your Quartz instance looks, let's get it hosted!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ‚úèÔ∏è Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary üß†](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinter„ÅÆÊï∞Â≠óËä±Âõ≠](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-01-13T14:25:00.528645021Z","tags":null}}